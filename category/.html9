<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>思いつきメモ</title>
	<meta name="description" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="author" content="tu1978">

	<!-- HTML5 shim, for IE6-8 support of HTML elements -->
	<!--[if lt IE 9]>
		<script src="https://formalism.github.io/blog/theme/html5.js"></script>
	<![endif]-->

	<!-- Styles -->
	<link href="https://formalism.github.io/blog/theme/bootstrap.min.css" rel="stylesheet">
	<link href="https://formalism.github.io/blog/theme/local.css" rel="stylesheet">
	<link href="https://formalism.github.io/blog/theme/pygments.css" rel="stylesheet">

	<!-- Feeds -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-58071669-1', 'auto');
  ga('send', 'pageview');
</script>
</head>
<body>
	<div class="topbar">
	  <div class="topbar-inner">
		<div class="container-fluid">
		  <a class="brand" href="https://formalism.github.io/blog/">思いつきメモ</a>
			<ul class="nav">
					<li class="active"><a href="https://formalism.github.io/blog/category/.html"></a></li>
			</ul>
			<p class="pull-right"><a href="https://formalism.github.io/blog/archives.html">[archives]</a> <a href="https://formalism.github.io/blog/tags.html">[tags]</a></p>
		</div>
	  </div>
	</div>

	<div class="container-fluid">
	  <div class="sidebar">
		<div class="well">
			<div class="social">
			<h3>Social</h3>
			<ul>
				<li><a href="http://twitter.com/tu1978">twitter</a></li>
			</ul>
			</div>
			<h3>Tags</h3>
			<ul>
			  <li><a href="https://formalism.github.io/blog/tag/agda.html">Agda (3)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/android.html">Android (4)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/blogging.html">Blogging (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/c.html">C# (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/c-amp.html">C++ AMP (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/center-exam.html">Center Exam (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/clojure.html">clojure (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/clsql.html">CLSQL (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/fpga.html">FPGA (20)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/gadgets.html">Gadgets (6)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/haskell.html">Haskell (6)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/hls.html">HLS (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/linux.html">Linux (7)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/liquor.html">Liquor (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/lisp.html">Lisp (3)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/mac.html">Mac (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/math.html">Math (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/opencl.html">OpenCL (3)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/opensolaris.html">OpenSolaris (3)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/pc.html">PC (4)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/printer.html">Printer (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/programming.html">Programming (49)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/shu-ping.html">書評 (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/software.html">Software (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/solr.html">Solr (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/sqlite3.html">SQLite3 (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/starbucks.html">Starbucks (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/tcf.html">TCF (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/uncategorized.html">Uncategorized (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/web.html">Web (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/wi2.html">Wi2 (2)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/windows.html">Windows (1)</a></li>
			  <li><a href="https://formalism.github.io/blog/tag/zynq.html">Zynq (9)</a></li>
			</ul>
		</div>
	  </div>
	  <div class="content">
<div class="page-header"><h1>思いつきメモ <small></small></h1></div>
<div class='article'>
	<h2>Clojureが素敵な件</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/clojure/">2010-03-26 07:00:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/programming.html">Programming</a> </div>
	<div class="summary"><p>最近、ちょっとしたWeb+DBアプリケーションを書きたいと思った。数年前は、Java+Struts+MySQLのような組み合わせがはやっていたと思う。その後もJavaのフレームワークはSpringやらSeasarやらたくさん提案されてきたし、自分もSeasarは一時期使って便利だと思った。でもやっぱり記述量が多く、面倒くさい。<br /><br />近頃はLLブームということもあって、Ruby on Railsに始まるLL言語系フレームワークがある。RoRは自分で使ってみて、家計簿のWebアプリを作成し、今でも現役で使っている。ただ、個人的にはバージョンアップなどが手間で、あまり好きではない。<br /><br />自分の中での最近はやりの言語はCommon Lispである。その実装としてSBCLなどがあり、SBCL+MySQLでも簡単なWebアプリを作ってみた。が、Lisp系言語はライブラリをいちいちインストールするのが面倒に思う。特にWindowsは弱い。Linux, Windows, Solarisなどの環境で、ひとつのものから別のものへすぐに移行するのは難しい。あるいは、最近であればGoogle App Engineを使って、環境の管理は全部Google様におまかせ、というのが流行なのであろうか。でもGAEは基本的にはRDBは使えないし、Lispも使えない。 <br /><br />以上のような遍歴を経て、現状において最善の折衷案として自分的に浮上しているのは、<a href="http://clojure.org/">clojure</a>である。Lispとまではいかないが、Lisp風味であり、<a href="http://github.com/weavejester/compojure">compojure</a>というWebフレームワークもある。これに ...</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/clojure/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>思考の整理学</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/blog-post_26/">2010-03-26 06:06:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/shu-ping.html">書評</a> </div>
	<div class="summary"><iframe frameborder="0" marginheight="0" marginwidth="0" scrolling="no" src="http://rcm-jp.amazon.co.jp/e/cm?t=formalism-22&amp;o=9&amp;p=8&amp;l=as1&amp;asins=4480020470&amp;fc1=000000&amp;IS2=1&amp;lt1=_blank&amp;m=amazon&amp;lc1=0000FF&amp;bc1=000000&amp;bg1=FFFFFF&amp;f=ifr" style="height: 240px; width: 120px;"></iframe>

<p>「思考の整理学」という本を買ってみた。まだ読み始めたばかり。Amazonのレビューの批判で、「朝飯前」というのが単なる思い付きだと批判されているが、これは間違っていると思う。なぜなら、著者自ら実践して効果があると判断された上での文章だから。自分がこの手の本に期待するのは、単なる思い付きではなくて、本当に役立つかどうか、ということ。その点で判断すれば、少なくとも著者の場合は役立っているのだから、「単なる思い付き」と片付けるのは早計である。自分でやってみて、役に立たないのであれば、それは指摘すればよい。<br /><br />本書の指摘する「グライダー人間」ということについては自分も耳が痛い。</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/blog-post_26/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>Wi2</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/wi2/">2010-03-11 08:10:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/wi2.html">Wi2</a> </div>
	<div class="summary"><p>最近になって<a href="http://www.wi2.co.jp/">Wi2</a>を契約した。ビックカメラからの契約で月々380円でマクドナルドなどで無線LANによるインターネット接続ができるというもの。近くのマクドナルドで試してみたところ、10Mbps以上出ていた。以前自宅のADSLでは12Mの契約でも4,5Mbpsだったから、速度的には十分。ただ、これまで4,5回ためした中で、一回だけwi2のログインページが表示されず、使用できないときがあった。<br /><br />基本的には全国で使えるようなので、しばらくは契約しておくことになりそう。</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/wi2/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>プリンタ購入</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/blog-post_04/">2010-03-04 07:06:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/printer.html">Printer</a> </div>
	<div class="summary"><p>久々にレーザプリンタを購入した。購入したのは<a href="http://www.amazon.co.jp/gp/product/B00194T818?ie=UTF8&amp;tag=formalism-22&amp;linkCode=as2&amp;camp=247&amp;creative=1211&amp;creativeASIN=B00194T818">HL-2170W</a><img alt="" border="0" height="1" src="http://www.assoc-amazon.jp/e/ir?t=formalism-22&amp;l=as2&amp;o=9&amp;a=B00194T818" style="border: medium none ! important; margin: 0px ! important;" width="1" />。前の機種はCanonで、4,5年間は使ったと思う。ただ、Windows Vista 64bitに対応したドライバを提供してくれなかったので、仕方なく買い換えることにした。印刷速度もかなり高速になっているのには驚いた。数年間で、意識できるほど早くなるとは。5年後には100ppm位いくかも(たぶんない)。</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/blog-post_04/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>リモートデスクトップ</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/remotedesktop-realvnc/">2010-03-04 06:41:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/software.html">Software</a> </div>
	<div class="summary"><p>Windowsを遠隔から操作しようとしたが、やり方が悪いのかもしれないが、リモートデスクトップでは、どうしても"コンソールセッション"に接続できなかった。接続先がXPだから??<br /><br />結局、リモートデスクトップはあきらめて、<a href="http://www.realvnc.com/">RealVNC</a>を使うことにした。これだとちゃんとコンソールセッションに接続できた。そして、Windowsの起動時に<a href="http://www.nanshiki.co.jp/software/index.html?sexe">sexe</a>を使用して、VMWare Playerをサービスとして起動し、LinuxサーバにSSHログインできるようにした。SSHのポートフォワードを使用して、VNCに遠隔から接続できるようになった。<br /><br />でも速度的にはリモートデスクトップの方が軽快...</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/remotedesktop-realvnc/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>Avalonバスのメモ</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2010/03/avalon/">2010-03-04 06:31:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/fpga.html">FPGA</a> </div>
	<div class="summary"><p><b>Avalon-MMのバス幅</b><br /><br />マスターが32bitでスレーブが16bitの場合、マスター側で32bit readを行うと、スレーブ側では16bit readが2回発行される。このようになるので、マスター側から見ると、スレーブのデータ空間のアドレスは連続して見える。(Avalon Interface Specifications 3.6.1)</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2010/03/avalon/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>ZFSでのCIFS共有(2)</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2009/12/zfscifs2/">2009-12-25 05:04:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/opensolaris.html">OpenSolaris</a> </div>
	<div class="summary"><p>以前<a href="https://formalism.github.io/blog/posts/2009/09/zfscifs/">ZFSでのCIFS共有</a>にて、zfsのプロパティで共有する方法を紹介しましたが、
どうやらOpenSolaris 2009.6ではまだCIFSが不安定です。自分の環境はOpenSolarisはVMWareで動かしているの
ですが、サスペンドから復帰すると再接続できなくなることが何度かありました。</p>
<p>それで、結局現在はSambaを入れて共有しています。</p>
<p>最近は、<a href="http://zfs-fuse.net/">ZFS for Linux</a>もあるようですので、無料でセキュリティパッチが
提供されていない(?)OpenSolarisの優位性が自分にとっては少なくなってきてしまいました。ちなみに、
ZFS for Linuxは、Ubuntu 8.04で簡単にコンパイルできました。まだdaemonを動かしただけでディスクを
使った実験はしていないので、性能などについては何ともいえませんが。</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2009/12/zfscifs2/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>3Dのリンク</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2009/11/3d/">2009-11-05 07:10:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/programming.html">Programming</a> </div>
	<div class="summary"><p>またメモ。<br /><br /><span style="font-weight: bold;">一般</span><br />http://www.ceres.dti.ne.jp/~ykuroda/oyaj/bone/basic3d.html<br />http://www012.upp.so-net.ne.jp/flab/3d/<br />http://www.mech.tohoku-gakuin.ac.jp/rde/contents/course/robotics/coordtrans.html<br /><br /><span style="font-weight: bold;">OpenGL</span><br />http://verygood.aid.design.kyushu-u.ac.jp/opengl2005/index.html</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2009/11/3d/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>Cプログラムのコールグラフ作成</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2009/11/c/">2009-11-02 02:15:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/programming.html">Programming</a> </div>
	<div class="summary"><p><span>Cのライブラリの動作の解析のため</span><span>のメモ</span><span style="font-weight: bold;"><span style="font-weight: bold;"><br /><br /></span>参考リンク<br /><br /></span><a href="http://docs.sun.com/app/docs/doc/819-0391/chapter4-49922?l=ja&amp;a=view">共有オブジェクトのプロファイリング<span style="font-weight: bold;"></span><br /></a><a href="http://d.hatena.ne.jp/ousttrue/20091017/1255754733">gprofでコールグラフ</a></p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2009/11/c/">more…</a>
	</div>
</div>	
<div class='article'>
	<h2>デジタルズーム(2)</h2>
	<div class="well small">Permalink: <a class="more" href="https://formalism.github.io/blog/posts/2009/10/2/">2009-10-30 04:55:00+09:00</a>
by <a class="url fn" href="https://formalism.github.io/blog/author/tu1978.html">tu1978 </a>
 in <a href="https://formalism.github.io/blog/category/.html"></a>
tags: <a href="https://formalism.github.io/blog/tag/programming.html">Programming</a> <a href="https://formalism.github.io/blog/tag/fpga.html">FPGA</a> </div>
	<div class="summary"><p>前回の続き<br /><br />前回はバイキュービック関数から、画素補間に使用する係数をどのように求めるのかということを記述しました。<br /><br />今回は、「画素補間に使用する元画素をどのように求めるのか」ということについて記述します。前回と同じように、ズーム前の画素がd0,d1,d2,d3,...と並んでいるとします。すると、ズームのために参照する画素としては、1倍(ズームなし)の場合は、最初はd0,d1,d2,d3、次はd1,d2,d3,d4、その次はd2,d3,d4,d5、...以下同様となります。これは当たり前ですね。<br /><br />次に<span style="font-weight: bold;">2倍</span>の場合は、最初はd0,d1,d2,d3、次もd0,d1,d2,d3、その次はd1,d2,d3,d4、その次もd1,d2,d3,d4 ...</p> <a class="btn primary xsmall" href="https://formalism.github.io/blog/posts/2009/10/2/">more…</a>
	</div>
</div>	

<div class="pagination">
<ul>
		<li class="prev"><a href="https://formalism.github.io/blog/category/8.html">&larr; Previous</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/.html">1</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/2.html">2</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/3.html">3</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/4.html">4</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/5.html">5</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/6.html">6</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/7.html">7</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/8.html">8</a></li>
		<li class="active"><a href="https://formalism.github.io/blog/category/9.html">9</a></li>
		<li class=""><a href="https://formalism.github.io/blog/category/10.html">10</a></li>
		<li class="next"><a href="https://formalism.github.io/blog/category/10.html">Next &rarr;</a></li>
</ul>
</div>

		<footer>
		  <p>Powered by <a href="http://getpelican.com/">Pelican</a>. Theme based on <a href="http://twitter.github.com/bootstrap/">Twitter Bootstrap</a>.</p>
		  <p>&copy; tu1978</p>
		</footer>
	  </div>

	</div>
</body>
</html>